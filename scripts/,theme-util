#!/bin/bash

# Define paths and variables
THEME_FILE="$HOME/.config/theme-util/current-theme"
LOCK_FILE="$THEME_FILE.lock"
DEFAULT_THEME="dark"
DEFAULT_GTK_THEME_DARK="Adwaita-dark"
DEFAULT_GTK_THEME_LIGHT="Adwaita-light"
DEFAULT_ZTF_COLO_DARK="dark"
DEFAULT_ZTF_COLO_LIGHT="light"
DEFAULT_ZELLIJ_DARK="catppuccin-mocha"
DEFAULT_ZELLIJ_LIGHT="catppuccin-latte"
DEFAULT_KITTY_CONF_DARK="dark.conf"
DEFAULT_KITTY_CONF_LIGHT="light.conf"
I3_CONFIG="$HOME/.config/i3/config"
I3SR_CONFIG="$HOME/.config/i3status-rust/config.toml"

# Ensure the theme file exists with a default value
mkdir -p "$(dirname "$THEME_FILE")"
if [ ! -f "$THEME_FILE" ]; then
    echo "$DEFAULT_THEME" > "$THEME_FILE"
fi

switch_sway_colors() {
  local NEW_THEME="$1"

  # Define color blocks for dark and light themes
  local DARK_BLOCK='
set $cBG        "#000000"
set $cFG        "#ffffff"
set $cPop       "#ffb915"
set $cDeemph    "#222222"
set $cWarnBG    "#a30000"
set $cWarnFG    "#ffcccc"
set $cInfoBG    "#0065a3"
set $cInfoFG    "#ccebff"
set $cStatusBG  "#3a751a"
set $cStatusFG  "#c2edab"'

  local LIGHT_BLOCK='
set $cBG        "#ffffff"
set $cFG        "#000000"
set $cPop       "#ffb915"
set $cDeemph    "#dddddd"
set $cWarnBG    "#ffcccc"
set $cWarnFG    "#a30000"
set $cInfoBG    "#ccebff"
set $cInfoFG    "#0065a3"
set $cStatusBG  "#c2edab"
set $cStatusFG  "#3a751a"'

  # Choose the correct color block based on the selected theme
  local CHOSEN_BLOCK
  if [ "$NEW_THEME" == "dark" ]; then
    CHOSEN_BLOCK="$DARK_BLOCK"
  else
    CHOSEN_BLOCK="$LIGHT_BLOCK"
  fi

  # Use awk to update the block between the defined markers
  awk -v new_block="$CHOSEN_BLOCK" '
    BEGIN { in_block = 0 }
    /^# --- BEGIN COLORS ---$/ { print; print new_block; in_block = 1; next }
    /^# --- END COLORS ---$/ { in_block = 0 }
    !in_block { print }
  ' "$I3_CONFIG" > "$I3_CONFIG.tmp" && mv "$I3_CONFIG.tmp" "$I3_CONFIG"
}

switch_sway_bg() {
  local NEW_THEME="$1"

  local DARK_BG_IMG=/home/ztf/bg-dark.jpg
  local LIGHT_BG_IMG=/home/ztf/bg-light.png

  local CHOSEN_IMAGE=
  if [ "$NEW_THEME" == "dark" ]; then
    CHOSEN_IMAGE="${DARK_BG_IMG}"
  else
    CHOSEN_IMAGE="${LIGHT_BG_IMG}"
  fi

  if [ ! -f "${CHOSEN_IMAGE}" ]; then
    echo "Will not switch to '${CHOSEN_IMAGE}' because I cannot find it."
    return
  fi

  echo "${CHOSEN_IMAGE}" > /home/ztf/.wallpaper-path
  systemctl restart --user wallpaper.service
}

switch_i3sr_colors() {
  local NEW_THEME="$1"

  local DARK_BLOCK='
idle_fg = "#aaaaaa"
idle_bg = "#000000"
info_fg = "#ffffff"
info_bg = "#000000"
warning_fg = "#fff0cc"
warning_bg = "#000000"
critical_fg = "#ffcccc"
critical_bg = "#000000"
good_fg = "#c2edab"
good_bg = "#000000"'

  local LIGHT_BLOCK='
idle_fg = "#787878"
idle_bg = "#ffffff"
info_fg = "#000000"
info_bg = "#ffffff"
warning_fg = "#C89110"
warning_bg = "#ffffff"
critical_fg = "#a30000"
critical_bg = "#ffffff"
good_fg = "#3a751a"
good_bg = "#ffffff"'

  local CHOSEN_BLOCK
  if [ "$NEW_THEME" == "dark" ]; then
    CHOSEN_BLOCK="$DARK_BLOCK"
  else
    CHOSEN_BLOCK="$LIGHT_BLOCK"
  fi

  awk -v new_block="$CHOSEN_BLOCK" '
    BEGIN { in_block = 0 }
    /^# --- BEGIN COLORS ---$/ { print; print new_block; in_block = 1; next }
    /^# --- END COLORS ---$/ { in_block = 0 }
    !in_block { print }
  ' "$I3SR_CONFIG" > "$I3SR_CONFIG.tmp" && mv "$I3SR_CONFIG.tmp" "$I3SR_CONFIG"
}

switch_git_delta_theme() {
  local NEW_THEME="$1"
  if [ "$NEW_THEME" == "dark" ]; then
    git config --global delta.light false
  else
    git config --global delta.light true
  fi
}

switch_theme() {
  local POST_COMMAND=""

  # Parse additional options for switch
  while [[ "$1" != "" ]]; do
    case $1 in
      --post-command )
        shift
        POST_COMMAND="$1"
        ;;
      * )
        echo "Invalid option: $1" >&2
        exit 1
        ;;
    esac
    shift
  done

  (
    # Create lock file and obtain exclusive lock
    exec 200>"$LOCK_FILE"
    flock -e 200

    CURRENT_THEME=$(cat "$THEME_FILE")
    local NEW_THEME
    local NEW_GTK_THEME
    local NEW_ZTF_COLO
    local NEW_ZELLIJ_THEME
    local NEW_KITTY_CONF

    if [ "$CURRENT_THEME" == "dark" ]; then
        NEW_THEME="light"
        NEW_GTK_THEME=$DEFAULT_GTK_THEME_LIGHT
        NEW_ZTF_COLO=$DEFAULT_ZTF_COLO_LIGHT
        NEW_ZELLIJ_THEME=$DEFAULT_ZELLIJ_LIGHT
        NEW_KITTY_CONF=$DEFAULT_KITTY_CONF_LIGHT
    else
        NEW_THEME="dark"
        NEW_GTK_THEME=$DEFAULT_GTK_THEME_DARK
        NEW_ZTF_COLO=$DEFAULT_ZTF_COLO_DARK
        NEW_ZELLIJ_THEME=$DEFAULT_ZELLIJ_DARK
        NEW_KITTY_CONF=$DEFAULT_KITTY_CONF_DARK
    fi
    
    # Apply changes
    gsettings set org.gnome.desktop.interface gtk-theme "$NEW_GTK_THEME"
    sed -i "s/^export\s\+ZTF_COLO=.*$/export ZTF_COLO=$NEW_ZTF_COLO/" "$HOME/.bashrc"
    sed -i "s/^theme \".*\"$/theme \"$NEW_ZELLIJ_THEME\"/" "$HOME/.config/zellij/config.kdl"
    sed -i "s|^include \./.*\.conf$|include ./$NEW_KITTY_CONF|" "$HOME/.config/kitty/kitty.conf"

    # Update sway colors
    switch_sway_colors "$NEW_THEME"
    switch_sway_bg "$NEW_THEME"
    switch_i3sr_colors "$NEW_THEME"
    switch_git_delta_theme "$NEW_THEME"

    # Update theme file
    echo "$NEW_THEME" > "$THEME_FILE"

    echo "Switched to $NEW_THEME theme." >&2

    # Execute the post-command if specified
    if [ -n "$POST_COMMAND" ]; then
      echo "Executing post-command: $POST_COMMAND" >&2
      bash -c "$POST_COMMAND"
    fi
  )
}

i3status_rust_block() {
  (
    # Create lock file and obtain exclusive lock
    exec 200>"$LOCK_FILE"
    flock -e 200

    CURRENT_THEME=$(cat "$THEME_FILE")
    ICON=""
    STATE="Idle"

    case $CURRENT_THEME in
        "dark")
            ICON="toggle_off"
            STATE="Info"
            ;;
        "light")
            ICON="toggle_on"
            STATE="Info"
            ;;
    esac
    OUTPUT_JSON=$(jq -n --arg icon "$ICON" --arg state "$STATE" --arg text "$CURRENT_THEME" --arg short_text "$CURRENT_THEME" \
        '{icon: $icon, state: $state, text: $text, short_text: $short_text}')
    echo "$OUTPUT_JSON"

  )
}

case "$1" in
    switch)
        shift
        switch_theme "$@"
        ;;
    i3status-rust-block)
        i3status_rust_block
        ;;
    *)
        echo "Usage: $0 {switch|i3status-rust-block} [--post-command 'command']" >&2
        exit 1
        ;;
esac
