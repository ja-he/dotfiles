# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Jetbrains Mono 10

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# locking
bindsym $mod+t exec ~/scripts/lockscript.sh
#bindsym $mod+t exec i3lock -c 8f0032

# stickyness 
bindsym $mod+s sticky toggle 

# start a terminal
bindsym $mod+Return       exec kitty
bindsym $mod+shift+Return exec alacritty -e nvim
#bindsym $mod+shift+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# create and show a QR code for the current clipboard contents
bindsym $mod+q exec xclip -selection clipboard -o | qrencode -o - |  feh --zoom fill --geometry 800x800 --force-aliasing -

# valid alternative programs are dmenu, rofi, tofi, ...
bindsym $mod+d exec rofi -show run
bindsym $mod+shift+d exec rofi -show window

# moving workspaces to other display 
bindsym $mod+i move workspace to output $Display0
bindsym $mod+o move workspace to output $Display1
bindsym $mod+p move workspace to output $Display2

# scratchpad
bindsym $mod+Shift+minus move scratchpad
bindsym $mod+minus scratchpad show

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left   focus left
bindsym $mod+Down   focus down
bindsym $mod+Up     focus up
bindsym $mod+Right  focus right

# move focused window (precisely, if floating)
    bindsym $mod+Shift+h        move left   1 px
    bindsym $mod+Shift+j        move down   1 px 
    bindsym $mod+Shift+k        move up     1 px
    bindsym $mod+Shift+l        move right  1 px
# move focused window (quickly, if floating)
    bindsym $mod+Shift+Left     move left   20 px
    bindsym $mod+Shift+Down     move down   20 px
    bindsym $mod+Shift+Up       move up     20 px 
    bindsym $mod+Shift+Right    move right  20 px

# split in horizontal orientation
bindsym $mod+b split h

bindsym $mod+shift+b exec scripts/backlight-cycle.sh up
bindsym $mod+shift+v exec scripts/backlight-cycle.sh down

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+shift+w layout stacking
bindsym $mod+w       layout tabbed
bindsym $mod+e       layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+shift+a focus child

for_window [class="feh"] floating enable

# screenshot (select)
#bindsym --release   $mod+z  exec scrot -f
bindsym --release   $mod+z  exec scrot -s -f -q 100 '/home/ztf/images/screenshots/%Y-%m-%d_%H%M%S.jpg' && notify-send "screenshot saved" || notify-send "screenshot aborted"
bindsym $mod+shift+z        exec feh $(find Pictures/screenshots/ -name "`date '+%Y-%m-%d'`*.png" | sort -r | head -n1)

#bindsym --release   $mod+z  exec pactl set-source-mute bluez_source.4C_87_5D_0A_68_6C.headset_head_unit true
#bindsym             $mod+z  exec pactl set-source-mute bluez_source.4C_87_5D_0A_68_6C.headset_head_unit false

# music
bindsym XF86AudioPlay exec mpc toggle
bindsym XF86Launch1   exec mpc toggle
bindsym XF86AudioNext exec ~/scripts/nextsong.sh
bindsym XF86AudioPrev exec ~/scripts/prevsong.sh

# videos
bindsym $mod+shift+m exec notify-send "playing $(xclip -o -selection clipboard)" & mpv --volume=39 $(xclip -o -selection clipboard)

# backlight
bindsym XF86MonBrightnessUp     exec change_brightness.sh +
bindsym XF86MonBrightnessDown   exec change_brightness.sh -

# Volume Changing 
set $PrimaryOutput alsa_output.usb-FiiO_FiiO_USB_DAC_K1-01.analog-stereo
# Mute Toggle 
bindsym XF86AudioMute exec ~/scripts/audiosettings.sh --toggle
# Volume up / down 
bindsym XF86AudioRaiseVolume exec ~/scripts/audiosettings.sh --increase
bindsym XF86AudioLowerVolume exec ~/scripts/audiosettings.sh --decrease
# Set Volume = 100%
bindsym $mod+numbersign exec pactl set-sink-volume $PrimaryOutput 100%

# Workspace Names
set $workspace01 "1"
set $workspace02 "2"
set $workspace03 "3"
set $workspace04 "4"
set $workspace05 "5"
set $workspace06 "6"
set $workspace07 "7"
set $workspace08 "8"
set $workspace09 "9"
set $workspace10 "0"

# switch to workspace
bindsym $mod+1 workspace $workspace01
bindsym $mod+2 workspace $workspace02
bindsym $mod+3 workspace $workspace03
bindsym $mod+4 workspace $workspace04
bindsym $mod+5 workspace $workspace05
bindsym $mod+6 workspace $workspace06
bindsym $mod+7 workspace $workspace07
bindsym $mod+8 workspace $workspace08
bindsym $mod+9 workspace $workspace09
bindsym $mod+0 workspace $workspace10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $workspace01
bindsym $mod+Shift+2 move container to workspace $workspace02
bindsym $mod+Shift+3 move container to workspace $workspace03
bindsym $mod+Shift+4 move container to workspace $workspace04
bindsym $mod+Shift+5 move container to workspace $workspace05
bindsym $mod+Shift+6 move container to workspace $workspace06
bindsym $mod+Shift+7 move container to workspace $workspace07
bindsym $mod+Shift+8 move container to workspace $workspace08
bindsym $mod+Shift+9 move container to workspace $workspace09
bindsym $mod+Shift+0 move container to workspace $workspace10

assign [class="Xournalpp"] $workspace05
assign [class="Seafile"] $workspace06

# Display Details 
set $Display0    HDMI-A-0
set $Display1    DisplayPort-2
set $Display2    DisplayPort-0

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 1 px or 1 ppt
        bindsym j resize grow height 1 px or 1 ppt
        bindsym k resize shrink height 1 px or 1 ppt
        bindsym l resize grow width 1 px or 1 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# COLOR DEFS
set $cBG        "#ffffff"
set $cFG        "#000000"
set $cPop       "#ffb915"
set $cDeemph    "#cccccc"
set $cWarnBG    "#ffcccc"
set $cWarnFG    "#a30000"
set $cInfoBG    "#ccebff"
set $cInfoFG    "#0065a3"
set $cStatusBG  "#c2edab"
set $cStatusFG  "#3a751a"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
  #mode hide
  mode dock
        #status_command i3blocks -c ~/.config/i3blocks.conf
        #status_command i3status
        status_command i3status-rs ~/.config/i3status-rust/config.toml
	tray_output $Display1

	colors {
        background          $cBG
        statusline          $cFG
        separator           $cDeemph

        # class             border      background  text
        focused_workspace   $cPop       $cPop       $cFG
        # (yes, this is on purpose. "active" means active on its workspace but
        #  the workspace isn't the focused one, so we consider it "inactive")
        active_workspace    $cDeemph    $cDeemph    $cFG
        inactive_workspace  $cBG        $cBG        $cDeemph
        urgent_workspace    $cWarnBG    $cWarnBG    $cWarnFG
        binding_mode        $cStatusBG  $cStatusBG  $cStatusFG
    }
}

# Window Settings 
set $BorderWidth 4
hide_edge_borders none
default_border pixel $BorderWidth
default_floating_border pixel $BorderWidth
#bindsym $mod+i border none
bindsym $mod+u       [window_type="normal"] border pixel $BorderWidth

# class                  border    backgr.   text      indicator child_border
client.focused           $cPop     $cPop     $cFG      $cPop     $cPop
client.focused_inactive  $cDeemph  $cDeemph  $cFG      $cDeemph  $cDeemph
client.unfocused         $cDeemph  $cDeemph  $cFG      $cDeemph  $cDeemph
client.urgent            $cWarnBG  $cWarnBG  $cWarnFG  $cWarnBG  $cWarnBG
client.placeholder       $cInfoBG  $cInfoBG  $cInfoFG  $cInfoBG  $cInfoBG

client.background $cBG







bindsym $mod+c       exec alacritty -e python3

#bindsym $mod+i       exec xinput --disable "SynPS/2 Synaptics TouchPad"
#bindsym $mod+shift+i exec xinput --enable  "SynPS/2 Synaptics TouchPad"

#bindsym XF86AudioPlay exec ~/scripts/micmutetoggle.sh
bindsym XF86AudioMicMute exec ~/scripts/micmutetoggle.sh
bindsym $mod+m exec ~/scripts/micmutetoggle.sh
bindsym $mod+n exec ~/scripts/loopbacktoggle.sh

# Gaps 
gaps inner  0
gaps outer  0

bindsym $mod+period  exec /home/ztf/scripts/randomwp /home/ztf/Pictures/wallpapers/favs

# STARTUP ----------------------------------------------------------------------
exec dunst
exec redshift
exec seafile-applet
exec hsetroot -solid '#f8f8f8'
# exec picom --experimental-backends
